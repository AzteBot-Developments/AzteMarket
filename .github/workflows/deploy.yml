# This workflow is ran only on pushes to main. It builds the project artifact and deploys it to Google Cloud Compute Engine.
# It also generates releases and tags the commits.

name: Deploy Golang Application

on:
  push:
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'README.md'
      - '.gitignore'
      - '.gitmodules'
      - 'Makefile'
    branches: [ 'main' ]

  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCE_PROJECT }}
  DOCKER_ARTIFACT_REPOSITORY: ${{ secrets.GCE_PROJECT_DOCKER_ARTIFACT_REGISTRY }}
  GKE_ZONE: europe-west2-c
  GKE_REGION: europe-west2 
  CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
  AZTEMARKET_IMAGE: aztemarket-service
  AZTEMARKET_CONFIG_ENCODED: ${{ secrets.ENV_ENCODED_STRING }}

jobs:

  # continuous-integration:
  #   uses: ./.github/workflows/test.yml
  #   secrets: inherit

  continuous-deployment:
    environment: production
    # needs: [continuous-integration]
    runs-on: ubuntu-latest
    # if: needs.continuous-integration.result == 'success'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v4

      - name: Generate next tag
        id: tag_version
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          MAJOR_STRING_TOKEN: "major:"
          MINOR_STRING_TOKEN: "minor:"
          PATCH_STRING_TOKEN: "patch:"
          NONE_STRING_TOKEN: "docs:"
          WITH_V: true
          DRY_RUN: true

      - name: Setup deployment environment
        run: |
          : # Environment variables for AzteMarket
          echo ${{ env.AZTEMARKET_CONFIG_ENCODED }} | base64 --decode > .env

      - name: Generate SHA output
        id: vars
        run: echo "GITHUB_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          create_credentials_file: true
          workload_identity_provider: ${{ secrets.GCP_GITHUB_WIP }}
          service_account: ${{ secrets.GCP_GITHUB_SERVICE_ACCOUNT }}
          access_token_lifetime: '120s'
      
      - uses: 'docker/login-action@v1'
        name: 'Docker login'
        with:
          registry: '${{ env.GKE_REGION }}-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - name: 'Docker build'
        run: |
          docker build --tag "${{ env.GKE_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_ARTIFACT_REPOSITORY }}/${{ env.AZTEMARKET_IMAGE }}:${{ steps.vars.outputs.GITHUB_SHA }}" -f Dockerfile .

      - name: 'Docker push'
        run: |
          docker push "${{ env.GKE_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_ARTIFACT_REPOSITORY }}/${{ env.AZTEMARKET_IMAGE }}:${{ steps.vars.outputs.GITHUB_SHA }}"
      
      - name: Connect to GKE
        uses: google-github-actions/get-gke-credentials@v2.0.0
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          location: ${{ env.GKE_ZONE }}
      
      - name: Export deployment variables
        run: |
          export GCE_PROJECT="${{ env.PROJECT_ID }}"
          export GCE_PROJECT_DOCKER_ARTIFACT_REGISTRY="${{ env.DOCKER_ARTIFACT_REPOSITORY }}"
      
      - name: Remove previous deployments
        run: |
          kubectl delete deployment --ignore-not-found=true aztemarket-service-${{ steps.tag_version.outputs.tag }}
      
      - name: Create GKE Deployments for new image
        run: |
          kubectl create deployment aztemarket-service-${{ steps.tag_version.outputs.new_tag }} --image="${{ env.GKE_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_ARTIFACT_REPOSITORY }}/${{ env.AZTEMARKET_IMAGE }}:${{ steps.vars.outputs.GITHUB_SHA }}"

      - name: Scale deployments
        run: |
          kubectl scale --replicas=1 deployment/aztemarket-service-${{ steps.tag_version.outputs.new_tag }}

      - name: Show created Pods
        run: |
          kubectl get pods
      
      - name: Bump version and push tag
        id: push-tag
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          MAJOR_STRING_TOKEN: "major:"
          MINOR_STRING_TOKEN: "minor:"
          PATCH_STRING_TOKEN: "patch:"
          NONE_STRING_TOKEN: "docs:"
          WITH_V: true
      
  release-changelogs:
    needs: [continuous-deployment]
    uses: ./.github/workflows/changelog.yml
    secrets: inherit
    if: needs.continuous-deployment.result == 'success'
